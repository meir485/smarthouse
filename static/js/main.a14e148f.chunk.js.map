{"version":3,"sources":["components/routes/Home.js","components/routes/AddRoom.js","components/Item.js","components/routes/Room.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","room","i","clickroom","state","roomsList","Row","id","className","noGutters","this","map","el","Col","to","onClick","style","backgroundColor","color","hight","width","type","name","Button","variant","size","block","Component","AddRoom","x","arr","colorStrToArr","setState","colorss","document","getElementById","innerHTML","axios","get","then","response","colorInculded","catch","error","console","log","colors","data","forEach","length","names","tags","tag","push","f","c","includes","hex","namess","toString","m","charAt","slice","chooseType","e","target","value","addName","alert","addColor","clearTimeout","setTimeout","chooseClr","add","item","onChange","placeholder","cl","Item","changeStat","itemname","status","Room","select","display","additem","find","index","App","addroom","t","n","ix","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a14e148f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n//import '../App.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             roomsList:props.roomsList\r\n        }\r\n    }\r\n    \r\n    room = (i) =>{\r\n        this.props.clickroom(i)\r\n    }\r\n    \r\n   \r\n    render() {\r\n        return (\r\n            <div  >\r\n                <Row id='rooms' className=\"justify-content-md-center\" noGutters=\"true\">\r\n                   \r\n               \r\n                {this.state.roomsList.map((el,i)=>{\r\n                    return  <Col><Link to ='/room/' id={i}  onClick={() => this.room(i)}>\r\n                        <div style={{backgroundColor:`${el.color}`,hight:'100px',width:'100px'}}>\r\n                            <h5>{el.type}</h5>\r\n                            <h5>{el.name}</h5>\r\n                  \r\n                        </div>\r\n                        \r\n                    </Link></Col>\r\n                      \r\n                })} </Row>\r\n                <Link to = '/addRoom/' >\r\n                <Button variant=\"success\" size=\"lg\" block>\r\n                 +\r\n                </Button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n//import Color from '../Color'\r\nexport default class AddRoom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             type:'',\r\n             name:'',\r\n             color:'',\r\n             item: [],\r\n             i:'',\r\n             colorss:[]\r\n        }\r\n    }\r\n\r\n    //////////////////////////////\r\n     \r\n  color =() =>{\r\n    let x = this.state.color\r\n    //works only on first//x=x.replace(\" \",\",\")\r\n    let arr=this.colorStrToArr(x)\r\n   this.setState({ colorss:[]})\r\n   document.getElementById('clr').innerHTML='';\r\n    axios.get( `http://www.colr.org/json/tags/${x}`)\r\n    .then(response => {\r\n    this.colorInculded(response,arr)\r\n  }).catch(function (error){\r\n    console.log(error);\r\n  })\r\n    console.log(this.state.colorss);\r\n  }\r\n\r\n   /// func shows colors of all colors[0]\r\n  colorInculded=(response,arr,colors)=>{\r\n    response.data.colors.forEach(color => {\r\n      if(this.state.colorss.length<10){\r\n        let names=[]\r\n        for(let tag of color.tags){\r\n         names.push(tag.name)\r\n         }\r\n         let f=true\r\n        for(let c of arr){\r\n          if(!names.includes(c)){\r\n            f=false;\r\n            break\r\n          }\r\n        }\r\n        if(f){\r\n           this.setState({colorss:[{hex:color.hex, namess:names.toString()}, ...this.state.colorss]})\r\n        }\r\n      }\r\n        \r\n      });\r\n  }\r\n  ///puts string in array/returns array\r\n  colorStrToArr = (x) =>{\r\n    let m=-1;\r\n    let arr=[]\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n      if(x.charAt(i)===\",\"){\r\n        arr.push(x.slice(m+1,i))\r\n        m=i\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n    ////////////////////////////\r\n    chooseType = e =>{\r\n        this.setState({type:e.target.value})\r\n    }\r\n\r\n    addName = e =>{\r\n        if(e.target.value.length>5){\r\n            alert('only 5')\r\n            this.setState({name:'',type:'',color:''})\r\n            return;\r\n        }\r\n        this.setState({name:e.target.value})\r\n    }\r\n    \r\n    addColor = e =>{\r\n        this.setState({color:e.target.value})\r\n        if(this.state.i){clearTimeout(this.state.i)}\r\n        this.setState({i:setTimeout(()=>this.color(),1000)})\r\n        \r\n    }\r\n   chooseClr = e => {\r\n\r\n       document.getElementById('clrIn').value=e.target.innerHTML\r\n       this.setState({color:e.target.style.backgroundColor})\r\n\r\n   }\r\n    add = () =>{\r\n        this.props.add(this.state.type,this.state.name,this.state.color,this.state.item)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n              <Row>\r\n                <Col><Row>\r\n                  <select id=\"type\" onChange={this.chooseType} placeholder=\"room type\" >\r\n                      <option value=\"\">roomtype</option>\r\n                      <option value=\"bathroom\">bathroom</option>\r\n                      <option value=\"sleep room\">sleep</option>\r\n                      <option value=\"kitchen\">kitchen</option>\r\n                      <option value=\"living room\">living</option>\r\n                </select>\r\n                </Row>\r\n                <Row><input onChange={this.addName} placeholder=\"name\"/></Row>\r\n                <Row> <input id='clrIn' onChange={this.addColor} placeholder=\"color---type , after each color , including first/last\" /></Row>\r\n               \r\n               <div id='clr'>\r\n                      {this.state.colorss.map((cl,i)=>{\r\n                        if(i===10){return;}\r\n                         console.log(cl.hex)\r\n                        return <Row><button onClick={this.chooseClr}><h1 style={{backgroundColor:`#${cl.hex}`,hight:'50px',width:'500px'}}>{cl.namess}</h1>  </button> </Row>    \r\n                })}\r\n                </div></Col>\r\n                <Col><Link to ='/' onClick={this.add}>add</Link></Col>\r\n              </Row>\r\n                \r\n                 \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n//,hight:'50px',width:'100px'\r\nexport default class Item extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             i: props.i,\r\n             name : props.itemname,\r\n             status: props.status,\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    changeStat = i =>{\r\n      this.props.changeStat(i)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div onClick={() => this.changeStat(this.state.i)}  style={{backgroundColor:`${this.state.status}` }}>\r\n                <h6>{this.state.name}</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Item from '../Item'\r\nexport default class Room extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             room:props.room[props.i],\r\n             index:props.i,\r\n            \r\n        }\r\n    }\r\n   \r\n    select = () =>{\r\n        document.getElementById('rm').style.display = \"none\"; \r\n        document.getElementById('its').style.display = \"block\"; \r\n    }\r\n    \r\n    additem = (e) =>{\r\n      if(e.target.value=='steryo'){\r\n          if(this.state.room.item.find(el=>el.name===e.target.value)){\r\n              alert('no no no to loud');\r\n              return;\r\n          }\r\n      }\r\n      if(e.target.value=='boyler'){\r\n          if(this.state.room.type!='bathroom'){\r\n              alert('only in bath')\r\n              return;\r\n          }\r\n      }\r\n      if(this.state.room.item.length===5){\r\n        alert('to much shit')  \r\n        return;}\r\n      this.props.additem(e.target.value,this.state.index)\r\n      document.getElementById('its').style.display = \"none\"; \r\n      document.getElementById('rm').style.display = \"block\"; \r\n    }\r\n    changeStat = i =>{\r\n      this.props.changeStat(this.state.index,i)\r\n    }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div id='rm'>\r\n                <Row>\r\n                    <Col><h3>room name:  {this.state.room.name}</h3>   </Col>\r\n                    <Col><h3>room type:  {this.state.room.type}</h3></Col>\r\n                </Row>\r\n                <Row>\r\n                 {this.state.room.item.map((el,i)=>{\r\n                    return <Col><Item  itemname={el.name} status={el.status} changeStat={this.changeStat} i={i} /></Col>\r\n                })}\r\n                </Row>\r\n                <button onClick={this.select}>add prodact</button>\r\n           </div>\r\n             <select id='its' style={{display:'none'}} onChange={this.additem} >\r\n                      <option value=''></option>\r\n                      <option value='aircondition'>airconditoining</option>\r\n                      <option value=\"boyler\">boyler</option>\r\n                      <option value=\"steryo\">steryo</option>\r\n                      <option value=\"lamp\">lamp</option>\r\n                </select>\r\n                \r\n            </div>\r\n                \r\n           \r\n        )\r\n    }\r\n}\r\n\r\n","\r\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Home from './components/routes/Home'\r\nimport AddRoom from './components/routes/AddRoom'\r\nimport Room from './components/routes/Room'\r\nimport './App.css';\r\nimport React, { Component } from 'react'\r\n\r\n///bugs- set time for input fill -done\r\n///////- mught not recgnize third color id-solved\r\n///////- must type , after each color , including first/last \r\n///////- colors show mulitipal times some time\r\n///////- shows only first 10 colors,might add promisise\r\n///////- could add with no name or type\r\n\r\nexport default class App extends Component {\r\n\r\n  state={\r\n    roomsList : [{}],\r\n    index : 0,\r\n    \r\n  }\r\n \r\n  addroom =(t,n,c,i)=>{\r\n    this.setState({roomsList:[{type:t,name:n,color:c,item:[...i]}, ...this.state.roomsList]})\r\n  }\r\n\r\n  clickroom = (i) =>{\r\n    this.setState({index:i})\r\n  }\r\n \r\n  additem = (e,i) =>{\r\n this.setState({roomsList:[...this.state.roomsList , this.state.roomsList[i].item=[{name:e,status:'red'},...this.state.roomsList[i].item]]})\r\n  }\r\n changeStat = (ix,i) =>{\r\n\r\n  if(this.state.roomsList[ix].item[i].status==='green'){\r\n      this.setState({roomsList:[...this.state.roomsList , this.state.roomsList[ix].item[i].status='red']})\r\n  }\r\n  else{ this.setState({roomsList:[...this.state.roomsList , this.state.roomsList[ix].item[i].status='green']})\r\n}\r\n }\r\n  render() {\r\n    return (\r\n     \r\n      <div id = 'container'>\r\n        <Router>\r\n        <h1>smart house</h1>\r\n        <Switch>\r\n                <Route exact path ='/' component={()=>{return <Home roomsList ={this.state.roomsList} clickroom={this.clickroom}  />}}></Route>\r\n                <Route exact path ='/addRoom' component={()=>{return <AddRoom add={this.addroom}   />}}></Route>\r\n                <Route exact path ='/room' component={()=>{return <Room room={this.state.roomsList} i={this.state.index} additem={this.additem} changeStat={this.changeStat} />}}></Route>\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}